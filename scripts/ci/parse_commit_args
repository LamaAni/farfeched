#!/usr/bin/env bash
source "$(dirname "${BASH_SOURCE[0]}")/common.sh"

help_text="
Parses and extracts the command args from the
Usage: parse_commit_args
Flags:
    -h | --help     Show this help menu. and continue.
    -d | --debug            Run in release debug mode (appends debug to the label and removes all [.]'s)
    --no-helm               Do not upload the helm chart to the release.
    --no-build              Skip the build
    --dry-run               Do not output the echo arg.
    --cache-dirs            A list of dirs to cache, space or newline seperated.
    --image-version-tags    A list of image version tags to be added, space or newline seperated.
    --version               The release version (override branch/tag name)
Args:
    --release       (true/false) Push this result to the docker registry. (Allowed only on master or --debug)
                    Defaults to true on release event, defaults to false on any other.
    --event-name    The event to release with. Defaults to \$EVENT_NAME
    --base-ref      The github reference for the current base (the branch, tag or base branch for merege)
"

: "${EVENT_NAME:="unknown-event"}"
: "${REPO="$GITHUB_REPOSITORY"}"
: "${REPO="local"}"
: "${NO_LATEST="false"}"
: "${PLATFORMS=""}"

: "${release=""}"
: "${debug="false"}"
: "${no_cache="false"}"
: "${no_buildx="false"}"
: "${no_helm="false"}"
: "${no_build="false"}"
: "${cache_dirs="$REPO_PATH/.ssh_host_keys"}"
: "${version=""}"

while [ "$#" -gt 0 ]; do
    case $1 in
    --help | -h)
        log:help "$help_text"
        exit 0
        ;;
    --dry-run)
        IS_DRY_RUN="true"
        ;;
    -s | --single-linux)
        no_buildx="true"
        no_cache="true"
        ;;
    -n | --no-cache)
        no_cache="true"
        ;;
    -d | --debug)
        debug="true"
        ;;
    --no-latest-tag)
        NO_LATEST="true"
        ;;
    --no-helm)
        no_helm="true"
        ;;
    --no-build)
        no_build="true"
        ;;
    --release)
        shift
        if [ "$1" == "true" ]; then
            release="true"
        else
            release="false"
        fi
        ;;
    --base-ref)
        shift
        BASE_REF="$1"
        ;;
    --platforms)
        shift
        PLATFORMS="$1"
        ;;
    --event-name)
        shift
        EVENT_NAME="$1"
        ;;
    --cache-dir)
        shift
        cache_dirs="$1"
        ;;
    --image-version-tags)
        shift
        IMAGE_VERSION_TAGS="$1"
        ;;
    --version)
        shift
        VERSION="$1"
        ;;
    *) ;;
    esac
    shift
done

: "${REPO:="$(get_cur_repo_name)"}"
: "${BASE_REF:="$(get_cur_branch)"}"
: "${BRANCH:="$(basename "$BASE_REF")"}"
: "${VERSION:="$BRANCH"}"
: "${IMAGE_VERSION_TAGS:="$VERSION"}"
: "${IMAGE_VERSION_TAGS:="$BRANCH"}"

if [ -z "$release" ] && [ "$EVENT_NAME" == "release" ]; then
    release="true"
fi

if [ "$release" == "true" ] && [ "$debug" != "true" ] && [ "$EVENT_NAME" != "release" ]; then
    release="false"
fi

if [ -z "$release" ]; then
    release="false"
fi

if [ "$debug" == "true" ]; then
    IMAGE_VERSION_TAGS="${IMAGE_VERSION_TAGS//"."/"-"}"
    IMAGE_VERSION_TAGS="debug-$IMAGE_VERSION_TAGS"
fi
IMAGE_VERSION_TAGS="$(split_versions "." $IMAGE_VERSION_TAGS)"

if [ "$EVENT_NAME" == "release" ] && [ "$debug" != "true" ] && [ "$NO_LATEST" != "true" ]; then
    IMAGE_VERSION_TAGS="$IMAGE_VERSION_TAGS latest"
fi

if [ "$EVENT_NAME" != "release" ]; then
    no_helm="true"
fi

cache_key="${REPO}-${BRANCH}"
cache_key_fallback="$REPO-master"

log:sep "Commit message: "
echo "$COMMIT_MESSAGE"

log:sep "Args:"
out event_name "$EVENT_NAME"
out release "$release"
out BRANCH "$BRANCH"
out no_buildx "$no_buildx"
out no_cache "$no_cache"
out no_helm "$no_helm"
out no_build "$no_build"
out debug "$debug"
out IMAGE_VERSION_TAGS "$IMAGE_VERSION_TAGS"
out version "$version"
out cache_key "$cache_key"
out cache_key_fallback "$cache_key_fallback"
out cache_dirs "$cache_dirs"
